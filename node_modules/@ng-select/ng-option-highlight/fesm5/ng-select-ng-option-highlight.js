import { __decorate } from 'tslib';
import { ElementRef, Renderer2, Input, Directive, NgModule } from '@angular/core';

var NgOptionHighlightDirective = /** @class */ (function () {
    function NgOptionHighlightDirective(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.element = this.elementRef.nativeElement;
    }
    NgOptionHighlightDirective.prototype.ngOnChanges = function () {
        if (this._canHighlight) {
            this._highlightLabel();
        }
    };
    NgOptionHighlightDirective.prototype.ngAfterViewInit = function () {
        this.label = this.element.innerHTML;
        if (this._canHighlight) {
            this._highlightLabel();
        }
    };
    NgOptionHighlightDirective.prototype._escapeRegExp = function (str) {
        return str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    };
    NgOptionHighlightDirective.prototype._highlightLabel = function () {
        var label = this.label;
        if (!this.term) {
            this._setInnerHtml(label);
            return;
        }
        var alternationString = this._escapeRegExp(this.term).replace(' ', '|');
        var termRegex = new RegExp(alternationString, 'gi');
        this._setInnerHtml(label.replace(termRegex, "<span class=\"highlighted\">$&</span>"));
    };
    Object.defineProperty(NgOptionHighlightDirective.prototype, "_canHighlight", {
        get: function () {
            return this._isDefined(this.term) && this._isDefined(this.label);
        },
        enumerable: true,
        configurable: true
    });
    NgOptionHighlightDirective.prototype._setInnerHtml = function (html) {
        this.renderer.setProperty(this.elementRef.nativeElement, 'innerHTML', html);
    };
    NgOptionHighlightDirective.prototype._isDefined = function (value) {
        return value !== undefined && value !== null;
    };
    NgOptionHighlightDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input('ngOptionHighlight')
    ], NgOptionHighlightDirective.prototype, "term", void 0);
    NgOptionHighlightDirective = __decorate([
        Directive({
            selector: '[ngOptionHighlight]'
        })
    ], NgOptionHighlightDirective);
    return NgOptionHighlightDirective;
}());

var NgOptionHighlightModule = /** @class */ (function () {
    function NgOptionHighlightModule() {
    }
    NgOptionHighlightModule = __decorate([
        NgModule({
            declarations: [NgOptionHighlightDirective],
            exports: [NgOptionHighlightDirective]
        })
    ], NgOptionHighlightModule);
    return NgOptionHighlightModule;
}());

/*
 * Public API Surface of ng-option-highlight
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgOptionHighlightDirective, NgOptionHighlightModule };
//# sourceMappingURL=ng-select-ng-option-highlight.js.map
